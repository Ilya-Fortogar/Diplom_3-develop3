{"name": "После оформления заказа его номер появляется в разделе В работе", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <test_order_page.TestOrderPage object at 0x75310270dea0>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"9b9c91083c3af23a53bd98451b788162\")>\n\n    @allure.title('После оформления заказа его номер появляется в разделе В работе')\n    def test_order_in_work(self, driver):\n        main_page = MainPage(driver)\n        main_page.open_main_page()\n        main_page.wait_and_click_account_button()\n        login_page = LoginPage(driver)\n        login_page.login_account(Data.data)\n        main_page.ingredient_drag_and_drop()\n        main_page.click_order_button()\n>       main_page.id_modal_is_displayed()\n\ntests/test_order_page.py:68: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/main_page.py:54: in id_modal_is_displayed\n    self.wait_until_element_clickable(MainPageLocators.INGREDIENT_MODAL_CLOSE)\npages/base_page.py:40: in wait_until_element_clickable\n    WebDriverWait(self.driver, 20).until(expected_conditions.element_to_be_clickable(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"9b9c91083c3af23a53bd98451b788162\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x753102fedb40>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n/home/user/.local/lib/python3.10/site-packages/selenium/webdriver/support/wait.py:105: TimeoutException"}, "steps": [{"name": "Открыть главную страницу Stellar Burgers", "status": "passed", "start": 1721928563111, "stop": 1721928565329}, {"name": "Дождаться и нажать на кнопку Личный кабинет", "status": "passed", "start": 1721928565329, "stop": 1721928565403}, {"name": "Авторизация", "status": "passed", "steps": [{"name": "Ввести почту", "status": "passed", "parameters": [{"name": "email", "value": "'dmitriev_ilya_6_024@gmail.com'"}], "start": 1721928565403, "stop": 1721928565485}, {"name": "Ввести пароль", "status": "passed", "parameters": [{"name": "password", "value": "'123456'"}], "start": 1721928565485, "stop": 1721928565532}, {"name": "Клик на кнопку Войти", "status": "passed", "start": 1721928565532, "stop": 1721928565585}], "parameters": [{"name": "user", "value": "{'name': 'Ilya', 'email': 'dmitriev_ilya_6_024@gmail.com', 'password': '123456'}"}], "start": 1721928565403, "stop": 1721928565585}, {"name": "Перетащить ингредиент в корзину", "status": "passed", "start": 1721928565585, "stop": 1721928566663}, {"name": "Клик на кнопку Оформить заказ", "status": "passed", "start": 1721928566663, "stop": 1721928566708}, {"name": "Отображение модального окна с номером заказа", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \n\n", "trace": "  File \"/home/user/.local/lib/python3.10/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"/tmp/e/Диплом Дмитриев/Diplom_3-develop3/pages/main_page.py\", line 54, in id_modal_is_displayed\n    self.wait_until_element_clickable(MainPageLocators.INGREDIENT_MODAL_CLOSE)\n  File \"/tmp/e/Диплом Дмитриев/Diplom_3-develop3/pages/base_page.py\", line 40, in wait_until_element_clickable\n    WebDriverWait(self.driver, 20).until(expected_conditions.element_to_be_clickable(locator))\n  File \"/home/user/.local/lib/python3.10/site-packages/selenium/webdriver/support/wait.py\", line 105, in until\n    raise TimeoutException(message, screen, stacktrace)\n"}, "start": 1721928566708, "stop": 1721928586727}], "parameters": [{"name": "driver", "value": "'chrome'"}], "start": 1721928563111, "stop": 1721928586727, "uuid": "1a95b75d-b443-40b9-aa28-3452741da113", "historyId": "82cd158f223037de38fb4ff29d98567f", "testCaseId": "24d1502413fce6449630d8fca5938ed2", "fullName": "tests.test_order_page.TestOrderPage#test_order_in_work", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_order_page"}, {"name": "subSuite", "value": "TestOrderPage"}, {"name": "host", "value": "user"}, {"name": "thread", "value": "7908-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_order_page"}]}