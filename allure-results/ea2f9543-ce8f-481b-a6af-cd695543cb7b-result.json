{"name": "При создании нового заказа счетчик Выполнено за все время/сегодня увеличивается", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <test_order_page.TestOrderPage object at 0x7b10e6fcb2e0>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"c85589dac5c38a1339dda94511289260\")>\n\n    @allure.title('При создании нового заказа счетчик Выполнено за все время/сегодня увеличивается')\n    def test_count_orders(self, driver):\n        main_page = MainPage(driver)\n        main_page.open_main_page()\n        main_page.wait_and_click_account_button()\n        login_page = LoginPage(driver)\n        login_page.login_account(Data.data)\n        main_page.click_order_list_button()\n        order_page = OrderPage(driver)\n        all_orders = order_page.get_count_all_orders()\n        today_orders = order_page.get_count_today_orders()\n        main_page.click_constructor_button()\n        main_page.ingredient_drag_and_drop()\n        main_page.click_order_button()\n>       main_page.click_modal_close()\n\ntests/test_order_page.py:51: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/main_page.py:48: in click_modal_close\n    self.wait_element(MainPageLocators.INGREDIENT_MODAL_CLOSE)\npages/base_page.py:25: in wait_element\n    WebDriverWait(self.driver, timeout).until(expected_conditions.visibility_of_element_located(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"c85589dac5c38a1339dda94511289260\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x7b10e7b33f40>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n/home/user/.local/lib/python3.10/site-packages/selenium/webdriver/support/wait.py:105: TimeoutException"}, "steps": [{"name": "Открыть главную страницу Stellar Burgers", "status": "passed", "start": 1722149376440, "stop": 1722149377416}, {"name": "Дождаться и нажать на кнопку Личный кабинет", "status": "passed", "start": 1722149377416, "stop": 1722149377553}, {"name": "Авторизация", "status": "passed", "steps": [{"name": "Ввести почту", "status": "passed", "parameters": [{"name": "email", "value": "'dmitriev_ilya_6_024@gmail.com'"}], "start": 1722149377553, "stop": 1722149377637}, {"name": "Ввести пароль", "status": "passed", "parameters": [{"name": "password", "value": "'123456'"}], "start": 1722149377637, "stop": 1722149377689}, {"name": "Клик на кнопку Войти", "status": "passed", "start": 1722149377689, "stop": 1722149377741}], "parameters": [{"name": "user", "value": "{'name': 'Ilya', 'email': 'dmitriev_ilya_6_024@gmail.com', 'password': '123456'}"}], "start": 1722149377553, "stop": 1722149377741}, {"name": "Клик на кнопку Лента заказов", "status": "passed", "start": 1722149377741, "stop": 1722149378141}, {"name": "Количество заказов за все время", "status": "passed", "start": 1722149378141, "stop": 1722149378683}, {"name": "Количество заказов за сегодня", "status": "passed", "start": 1722149378683, "stop": 1722149378717}, {"name": "Клик на кнопку Конструктор", "status": "passed", "start": 1722149378717, "stop": 1722149378760}, {"name": "Перетащить ингредиент в корзину", "status": "passed", "start": 1722149378760, "stop": 1722149379335}, {"name": "Клик на кнопку Оформить заказ", "status": "passed", "start": 1722149379335, "stop": 1722149379379}, {"name": "Закрыть модальное окно", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \n\n", "trace": "  File \"/home/user/.local/lib/python3.10/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"/home/user/Рабочий стол/Создать папку/ew/Diplom_3-develop3/pages/main_page.py\", line 48, in click_modal_close\n    self.wait_element(MainPageLocators.INGREDIENT_MODAL_CLOSE)\n  File \"/home/user/Рабочий стол/Создать папку/ew/Diplom_3-develop3/pages/base_page.py\", line 25, in wait_element\n    WebDriverWait(self.driver, timeout).until(expected_conditions.visibility_of_element_located(locator))\n  File \"/home/user/.local/lib/python3.10/site-packages/selenium/webdriver/support/wait.py\", line 105, in until\n    raise TimeoutException(message, screen, stacktrace)\n"}, "start": 1722149379380, "stop": 1722149399890}], "parameters": [{"name": "driver", "value": "'chrome'"}], "start": 1722149376440, "stop": 1722149399890, "uuid": "8d18c76e-de8f-4178-af63-5f349c106469", "historyId": "c652614e42bd195e0e2eb7cdfa42c21d", "testCaseId": "a1e722c1154b514c26cba63c8caccba1", "fullName": "tests.test_order_page.TestOrderPage#test_count_orders", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_order_page"}, {"name": "subSuite", "value": "TestOrderPage"}, {"name": "host", "value": "user"}, {"name": "thread", "value": "12842-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_order_page"}]}